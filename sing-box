#!/bin/sh /etc/rc.common
# Copyright (C) 2025 OpenWrt

START=99
STOP=15

BIN="/usr/bin/sing-box"
CONFIG_FILE="/root/singbox.json"
TEMP_CONFIG="/tmp/singbox_temp.json"
BIN_RUN="$BIN run -c $CONFIG_FILE"
BIN_CHECK="$BIN check -c $TEMP_CONFIG"

LOG_FILE="/root/singbox.log"
CHECK_INTERVAL=600  # 30分钟（1800秒）

random_string=$(openssl rand -hex 8)
CONFIG_URL="https://sb.diybeta.com/?password=haierspi!!@1$&type=linux&random=${random_string}"

get_pid() {
    pid=$(pgrep -f "$BIN_RUN" | grep -v $$ )
    echo "$pid"
}

download_config() {
    if command -v curl >/dev/null 2>&1; then
        DOWNLOADER="curl -s -o $TEMP_CONFIG"
    elif command -v wget >/dev/null 2>&1; then
        DOWNLOADER="wget -q -O $TEMP_CONFIG"
    else
        echo "Error: curl or wget is required" >&2
        return 1
    fi

    $DOWNLOADER "$CONFIG_URL"
    return $?
}

check_and_update() {
    download_config
    if [ $? -ne 0 ]; then
        echo "Error: Failed to download configuration file" >&2
        rm -f "$TEMP_CONFIG"
        return 1
    fi

    if $BIN_CHECK >/dev/null 2>&1; then
        if [ -f "$CONFIG_FILE" ] && cmp -s "$TEMP_CONFIG" "$CONFIG_FILE"; then
            echo "Configuration unchanged, no update needed"
            rm -f "$TEMP_CONFIG"
            return 0
        fi

        mv "$TEMP_CONFIG" "$CONFIG_FILE"
        if [ $? -eq 0 ]; then
            echo "Configuration updated successfully"
            pid=$(get_pid)
            if [ -n "$pid" ]; then
                kill "$pid"
                sleep 1
                nohup $BIN_RUN > "$LOG_FILE" 2>&1 &
                echo "Service restarted with new configuration"
            fi
            return 0
        else
            echo "Error: Failed to update configuration file" >&2
            rm -f "$TEMP_CONFIG"
            return 1
        fi
    else
        echo "Warning: Downloaded configuration is invalid, keeping existing configuration" >&2
        rm -f "$TEMP_CONFIG"
        return 1
    fi
}

start() {
    echo "Starting Sing-box service..."
    download_config
    if [ $? -ne 0 ]; then
        echo "Warning: Failed to download initial configuration" >&2
        if [ -f "$CONFIG_FILE" ]; then
            echo "Attempting to start with existing configuration..."
            nohup $BIN_RUN > "$LOG_FILE" 2>&1 &
            if [ $? -eq 0 ]; then
                echo "Sing-box has started with existing configuration"
            else
                echo "Error: Failed to start Sing-box with existing configuration" >&2
                exit 1
            fi
        else
            echo "Error: No existing configuration available" >&2
            exit 1
        fi
    else
        if $BIN_CHECK >/dev/null 2>&1; then
            mv "$TEMP_CONFIG" "$CONFIG_FILE"
            nohup $BIN_RUN > "$LOG_FILE" 2>&1 &
            if [ $? -eq 0 ]; then
                echo "Sing-box has started with new configuration"
            else
                echo "Error: Failed to start Sing-box with new configuration" >&2
                exit 1
            fi
        else
            echo "Warning: Downloaded configuration is invalid" >&2
            rm -f "$TEMP_CONFIG"
            if [ -f "$CONFIG_FILE" ]; then
                echo "Attempting to start with existing configuration..."
                nohup $BIN_RUN > "$LOG_FILE" 2>&1 &
                if [ $? -eq 0 ]; then
                    echo "Sing-box has started with existing configuration"
                else
                    echo "Error: Failed to start Sing-box with existing configuration" >&2
                    exit 1
                fi
            else
                echo "Error: No valid configuration available" >&2
                exit 1
            fi
        fi
    fi

    # 启动后台检查循环，并记录其 PID
    (while true; do
        sleep "$CHECK_INTERVAL"
        echo "Checking for configuration updates..."
        check_and_update
    done) &
    CHECK_PID=$!
    echo "$CHECK_PID" > /var/run/sing-box-check.pid
    echo "Background configuration check started (PID: $CHECK_PID, every $((CHECK_INTERVAL/60)) minutes)"
}

stop() {
    # 停止主服务进程
    pid=$(get_pid)
    if [ -n "$pid" ]; then
        echo "Stopping service (PID: $pid)..."
        kill "$pid"
        sleep 2
    fi

    # 停止后台检查进程
    if [ -f /var/run/sing-box-check.pid ]; then
        check_pid=$(cat /var/run/sing-box-check.pid)
        check_t_pid=$(pgrep -P $check_pid)
        echo "$pid $check_pid $check_t_pid"
        if [ -n "$check_pid" ] && ps | grep -q "^[[:space:]]*$check_pid"; then
            echo "Stopping background check process (PID: $check_pid PID: $check_t_pid)..."
            kill "$check_pid"
            kill "$check_t_pid"
            sleep 1
            if ps | grep -q "^[[:space:]]*$check_pid"; then
                echo "Warning: Failed to stop background check process, forcing termination..."
                kill -9 "$check_pid"
                kill -9 "$check_t_pid"
            fi
        fi
        rm -f /var/run/sing-box-check.pid
    fi

    # 检查是否完全停止
    if [ -z "$(get_pid)" ]; then
        echo "Service and all related processes stopped"
    else
        echo "Failed to stop service" >&2
        return 1
    fi
}

restart() {
    stop
    sleep 1
    start
}

status() {
    pid=$(get_pid)
    if [ -n "$pid" ]; then
        echo "Service is running with PID: $pid"
        if [ -f /var/run/sing-box-check.pid ]; then
            check_pid=$(cat /var/run/sing-box-check.pid)
            echo "Background check is running with PID: $check_pid"
        fi
    else
        echo "Service is not running"
    fi
}